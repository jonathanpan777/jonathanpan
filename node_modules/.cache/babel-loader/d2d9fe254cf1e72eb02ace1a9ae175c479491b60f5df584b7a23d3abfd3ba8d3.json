{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpan/Desktop/jonathanpan.dev/my-portfolio/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = messageText => {\n    const newMessage = {\n      text: messageText,\n      sender: 'user'\n    };\n    setMessages([...messages, newMessage]);\n\n    // Simulate a response from the server after a delay\n    setTimeout(() => {\n      const responseMessage = {\n        text: 'This is a sample response from ChatGPT.',\n        sender: 'chatbot'\n      };\n      setMessages([...messages, responseMessage]);\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"ChatGPT Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user' : 'chatbot'}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        placeholder: \"Type your message...\",\n        onKeyDown: event => {\n          if (event.key === 'Enter' && event.target.value.trim() !== '') {\n            handleSendMessage(event.target.value.trim());\n            event.target.value = '';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleSendMessage","messageText","newMessage","text","sender","setTimeout","responseMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","placeholder","onKeyDown","event","key","target","value","trim","_c","$RefreshReg$"],"sources":["/Users/jonathanpan/Desktop/jonathanpan.dev/my-portfolio/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = (messageText) => {\n    const newMessage = {\n      text: messageText,\n      sender: 'user',\n    };\n\n    setMessages([...messages, newMessage]);\n\n    // Simulate a response from the server after a delay\n    setTimeout(() => {\n      const responseMessage = {\n        text: 'This is a sample response from ChatGPT.',\n        sender: 'chatbot',\n      };\n\n      setMessages([...messages, responseMessage]);\n    }, 500);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">ChatGPT Portfolio</header>\n\n      <div className=\"chat-window\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.sender === 'user' ? 'user' : 'chatbot'}`}\n          >\n            {message.text}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          className=\"message-input\"\n          placeholder=\"Type your message...\"\n          onKeyDown={(event) => {\n            if (event.key === 'Enter' && event.target.value.trim() !== '') {\n              handleSendMessage(event.target.value.trim());\n              event.target.value = '';\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMO,iBAAiB,GAAIC,WAAW,IAAK;IACzC,MAAMC,UAAU,GAAG;MACjBC,IAAI,EAAEF,WAAW;MACjBG,MAAM,EAAE;IACV,CAAC;IAEDL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEI,UAAU,CAAC,CAAC;;IAEtC;IACAG,UAAU,CAAC,MAAM;MACf,MAAMC,eAAe,GAAG;QACtBH,IAAI,EAAE,yCAAyC;QAC/CC,MAAM,EAAE;MACV,CAAC;MAEDL,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEQ,eAAe,CAAC,CAAC;IAC7C,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAQY,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErDjB,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBV,QAAQ,CAACe,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BpB,OAAA;QAEEY,SAAS,EAAG,WAAUO,OAAO,CAACV,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,SAAU,EAAE;QAAAI,QAAA,EAEtEM,OAAO,CAACX;MAAI,GAHRY,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENjB,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bb,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXT,SAAS,EAAC,eAAe;QACzBU,WAAW,EAAC,sBAAsB;QAClCC,SAAS,EAAGC,KAAK,IAAK;UACpB,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,IAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;YAC7DvB,iBAAiB,CAACmB,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;YAC5CJ,KAAK,CAACE,MAAM,CAACC,KAAK,GAAG,EAAE;UACzB;QACF;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CApDQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}